{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","components/ErrorMessage.js","App.js","index.js"],"names":["PersonForm","props","react_default","a","createElement","onSubmit","onChange","onNameChange","value","nameValue","onNumberChange","numberValue","type","Person","_ref","person","handleRemoveButtonClick","name","number","onClick","Persons","persons","filter","trim","toLowerCase","includes","toLocaleLowerCase","filteredPersons","map","key","components_Person","Filter","onFilterChange","baseUrl","services_persons","axios","get","then","response","data","newPerson","post","updatedPerson","put","concat","id","delete","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorMessage","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","newFilter","setNewFilter","_useState9","_useState10","notificationMessage","setNotificationMessage","_useState11","_useState12","errorMessage","setErrorMessage","useEffect","personService","initialPersons","components_Notification","components_ErrorMessage","components_Filter","event","target","components_PersonForm","preventDefault","some","window","confirm","personToUpdate","find","objectSpread","returnedPerson","setTimeout","catch","error","components_Persons","personToDelete","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6e58071d.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.onSubmit}>\n            <div>\n                name: <input onChange={props.onNameChange} value={props.nameValue} /><br />\n                number: <input onChange={props.onNumberChange} value={props.numberValue} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ person, handleRemoveButtonClick }) => (\n    <div>{person.name} {person.number}\n        <button onClick={() => handleRemoveButtonClick(person)}>delete</button>\n    </div>\n)\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst filteredPersons = (persons, filter) => persons.filter(person =>\n    person.name.toLowerCase().includes(filter.trim().toLocaleLowerCase()))\n\nconst Persons = ({ persons, filter, handleRemoveButtonClick }) => {\n\n    const personsToShow = filter.trim() === ''\n        ? persons : filteredPersons(persons, filter)\n\n    return (\n        personsToShow.map(person =>\n            <div key={person.name}>\n                <Person person={person}\n                handleRemoveButtonClick={handleRemoveButtonClick} />\n            </div>\n        )\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({onFilterChange, filter}) => (\n    <div>\n        filter shown with <input onChange={onFilterChange} value={filter} />\n    </div>\n)\n\nexport default Filter","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst update = (updatedPerson) => {\n    const request = axios.put(`${baseUrl}/${updatedPerson.id}`, updatedPerson)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst Notification = ({ message }) => {\n    const notificationStyle = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst ErrorMessage = ({ message }) => {\n    const notificationStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default ErrorMessage","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport ErrorMessage from './components/ErrorMessage'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if ((persons.some(person => person.name === newName))) {\n      if (!window.confirm(`${newName} is already added to phonebook, replace the old number\n      with a new one?`)) {\n        return\n      }\n\n      const personToUpdate = persons.find(person => person.name === newName)\n      const updatedPerson = { ...personToUpdate, number: newNumber }\n\n      personService\n        .update(updatedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person =>\n            person.id !== returnedPerson.id\n              ? person : returnedPerson))\n          setNotificationMessage(`Updated ${returnedPerson.name}`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(`Information of ${updatedPerson.name} has already\n            been removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.id !== updatedPerson.id))\n        })\n\n\n      setNewNumber('')\n      setNewName('')\n\n      return\n    }\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setNotificationMessage(`Added ${returnedPerson.name}`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n\n    setNewNumber('')\n    setNewName('')\n\n  }\n\n  const handleRemoveButtonClick = (personToDelete) => {\n    if (!window.confirm(`Delete ${personToDelete.name}?`)) {\n      return\n    }\n\n    personService\n      .remove(personToDelete.id)\n      .then(setPersons(persons.filter(person => person.id !== personToDelete.id)))\n      .then(\n        setNotificationMessage(`Deleted ${personToDelete.name}`))\n      .then(\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000))\n      .catch(error => {\n        setErrorMessage(`Information of ${personToDelete.name} has already\n          been removed from server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <ErrorMessage message={errorMessage} />\n      <Filter onFilterChange={handleFilterChange} filter={newFilter} />\n      <h3>add a new</h3>\n      <PersonForm onSubmit={addPerson} onNameChange={handleNameChange}\n        nameValue={newName} onNumberChange={handleNumberChange} numberValue={newNumber} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={newFilter}\n        handleRemoveButtonClick={handleRemoveButtonClick} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}